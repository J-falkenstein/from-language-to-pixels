I'm sorry, but as a text-based AI, I cannot provide an explicit pixel matrix for a coffee image. However, I can explain how it might be represented as a pixel matrix.

In a hypothetical coffee image, pixels corresponding to the background or a table surface might have different combinations of RGB values resulting in different shades of brown or cream. Pixels for the coffee mug might have RGB values corresponding to white, black, red, or any other color depending on the mug. Pixels representing the coffee inside the mug might have different shades of black and brown, representing the dark liquid.

In a gray-scale or one-channel image, each pixel is represented by a single intensity value, usually ranging from 0 (black) to 255 (white). 

In an RGB image, each pixel is represented by three values (for red, green, and blue channels) and each value can range from 0 to 255. Thus a pixel corresponding to black coffee might have RGB values like (50, 25, 20), representing a dark brown color.

This is a simplified explanation as real-world images have a vast and complex range of colors and shading for even simple objects, depending on lighting, reflections, shadows etc. They also usually have many more pixels than the small matrices used in these examples. A digital photo may have a resolution of several thousand pixels in each dimension, resulting in millions of pixels that each store RGB color information. 

High-resolution images are represented by large matrices, with each element in the matrix storing the RGB color information or intensity for the corresponding pixel in the image. However, creating such a matrix by hand is impracticable and it would also be far too large to display in this format.