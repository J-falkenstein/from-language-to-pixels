As a text-based AI, I am unable to display an image to illustrate this. However, I can describe how one might represent an image of the letter "Ö" with a pixel matrix.

Think of an image of the letter "Ö" on a grid of pixels. If we imagine this image being black and white, each pixel will have either a value of (0, 0, 0) for black (the letter Ö) or (255, 255, 255) for white (the background).

In the areas where the letter "Ö" is drawn, the pixel values would be (0, 0, 0) to represent black; and where there is no letter, the pixel value would be (255, 255, 255) to represent white.

The pixel matrix would be a two-dimensional array with the number of elements (pixels) based on the resolution of the image. 

For simple visualisation, let's consider a simplified pixel matrix of a 5 by 5 grid image of the letter "O". 

[ (255, 255, 255) (0, 0, 0) (0, 0, 0) (0, 0, 0) (255, 255, 255) ]
[ (0, 0, 0) (255, 255, 255) (255, 255, 255) (255, 255, 255) (0, 0, 0) ]
[ (0, 0, 0) (255, 255, 255) (255, 255, 255) (255, 255, 255) (0, 0, 0) ]
[ (0, 0, 0) (255, 255, 255) (255, 255, 255) (255, 255, 255) (0, 0, 0) ]
[ (255, 255, 255) (0, 0, 0) (0, 0, 0) (0, 0, 0) (255, 255, 255) ]

Note: This simplified example does not represent the letter "Ö" nor does it consider the dots above the letter. In real applications, images usually contain large numbers of pixels and a much higher resolution would be used to represent an image of the letter "Ö".